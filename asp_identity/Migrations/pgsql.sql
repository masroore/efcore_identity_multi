CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory"
(
    "MigrationId" character varying
(
    150
) NOT NULL,
    "ProductVersion" character varying
(
    32
) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY
(
    "MigrationId"
)
    );

START TRANSACTION;

CREATE TABLE roles
(
    id                bigint GENERATED BY DEFAULT AS IDENTITY,
    name              character varying(256) NULL,
    normalized_name   character varying(256) NULL,
    concurrency_stamp text NULL,
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE users
(
    id                     bigint GENERATED BY DEFAULT AS IDENTITY,
    first_name             varchar(100) NULL,
    last_name              varchar(100) NULL,
    is_active              boolean                  NOT NULL,
    created_on             timestamp with time zone NOT NULL,
    modified_on            timestamp with time zone NULL,
    inactive_date_time     timestamp with time zone NULL,
    user_name              character varying(256) NULL,
    normalized_user_name   character varying(256) NULL,
    email                  character varying(256) NULL,
    normalized_email       character varying(256) NULL,
    email_confirmed        boolean                  NOT NULL,
    password_hash          text NULL,
    security_stamp         text NULL,
    concurrency_stamp      text NULL,
    phone_number           text NULL,
    phone_number_confirmed boolean                  NOT NULL,
    two_factor_enabled     boolean                  NOT NULL,
    lockout_end            timestamp with time zone NULL,
    lockout_enabled        boolean                  NOT NULL,
    access_failed_count    integer                  NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE role_claims
(
    id          integer GENERATED BY DEFAULT AS IDENTITY,
    role_id     bigint NOT NULL,
    claim_type  text NULL,
    claim_value text NULL,
    CONSTRAINT pk_role_claims PRIMARY KEY (id),
    CONSTRAINT fk_role_claims_roles_role_id FOREIGN KEY (role_id) REFERENCES roles (id) ON DELETE CASCADE
);

CREATE TABLE user_claims
(
    id          integer GENERATED BY DEFAULT AS IDENTITY,
    user_id     bigint NOT NULL,
    claim_type  text NULL,
    claim_value text NULL,
    CONSTRAINT pk_user_claims PRIMARY KEY (id),
    CONSTRAINT fk_user_claims_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE user_logins
(
    login_provider        text   NOT NULL,
    provider_key          text   NOT NULL,
    provider_display_name text NULL,
    user_id               bigint NOT NULL,
    CONSTRAINT pk_user_logins PRIMARY KEY (login_provider, provider_key),
    CONSTRAINT fk_user_logins_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE user_roles
(
    user_id bigint NOT NULL,
    role_id bigint NOT NULL,
    CONSTRAINT pk_user_roles PRIMARY KEY (user_id, role_id),
    CONSTRAINT fk_user_roles_roles_role_id FOREIGN KEY (role_id) REFERENCES roles (id) ON DELETE CASCADE,
    CONSTRAINT fk_user_roles_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE user_tokens
(
    user_id        bigint NOT NULL,
    login_provider text   NOT NULL,
    name           text   NOT NULL,
    value          text NULL,
    CONSTRAINT pk_user_tokens PRIMARY KEY (user_id, login_provider, name),
    CONSTRAINT fk_user_tokens_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE INDEX ix_role_claims_role_id ON role_claims (role_id);

CREATE UNIQUE INDEX ak_roles_normalized_name ON roles (normalized_name);

CREATE INDEX ix_user_claims_user_id ON user_claims (user_id);

CREATE INDEX ix_user_logins_user_id ON user_logins (user_id);

CREATE INDEX ix_user_roles_role_id ON user_roles (role_id);

CREATE UNIQUE INDEX ak_users_normalized_user_name ON users (normalized_user_name);

CREATE INDEX ix_users_normalized_email ON users (normalized_email);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20230225163527_identity', '7.0.3');

COMMIT;

